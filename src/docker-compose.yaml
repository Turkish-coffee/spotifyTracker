networks:
  app-tier:
    driver: bridge

services:

  postgres-db:
    image: postgres:17.0
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ../db:/var/lib/postgresql/data
      - ./init-tables.sql:/docker-entrypoint-initdb.d/init-tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"] 
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - app-tier

  dbt:
    build:
      context: ..
      dockerfile: docker/dbt-image.dockerfile
    depends_on:
      postgres-db:
        condition: service_healthy
    volumes:
      - ./dbt:/app/dbt
    networks:
      - app-tier

  dagster:
    build:
      context: ..
      dockerfile: docker/dagster-image.dockerfile
    ports:
      - "3000:3000"
      - "8000:8000"
    volumes:
      # only add the dagster core directory to avoid uncessessary files copies
      # and preserve the advantage of code update while container runtime.
      - ./dagster/spotifyTrackerDAGs:/opt/dagster/dagster_home/spotifyTrackerDAGs
      #- ./dbt:/opt/dbt
      - ./dbt/models:/opt/dbt/models
      - ./dbt/profiles.yml:/opt/dbt/profiles.yml
      - ./dbt/dbt_project.yml:/opt/dbt/dbt_project.yml
      # since the .env file is not changed that much we don't need to add it (only
      # for development purposes
      #- ./.env:/opt/dagster/dagster_home/.env
    environment:
      DAGSTER_HOME: "/opt/dagster/dagster_home"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres

    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - app-tier